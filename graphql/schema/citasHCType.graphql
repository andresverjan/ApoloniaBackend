type CitaHC {
  Paciente:String
  IdOdontologo:String
  Fecha: String
  HorarioIni:Date
  HorarioFin:Date
  Actividad: String
  Horario: String
  Unidad: String
  Confirmado: String
  ConfirmadoPor:String
  ConfirmadoHora: Date
  Asistida:String
  HoraLlegada: String
  ActividadReal:String
  IdOdontologoReal:String
  FechaReal: Date
  AtencionReal: Date
  Retraso: Int
  IdUsuario:String
  Cedula:String
  Control:String
  ObservacionLab: String
  Proveedor:String
  Laboratorio: String
  Valor: Int
  FechaEntrega:Date
  Fijar: String
  ConfirmadoFecha:Date
  AsignadoHora: Date
  Diagnostico: String
  CodDiagnostico: Int
  Tratamiento: String
  CodTratamiento:String
  CodActividadReal: String
  Consecutivo:Int
  Cia: String
  Observacion:String
  Nuevo: String
  AnunciadoPor:String
  IdEspecialista:String
  TextoRemision:String
  AsignadoFecha: Date
  Observacion2: String
  ObservacionCita: String
  Reprogramar: String
  Estado: String
  Desevolucionar: Int
  DatosDesevolucion:String
  UsuarioDesevolucion:String
  Duracion: String
  FechaSalida: String
  HoraSalida: Date
  Nombres: String
  Apellidos:String
  Campo1: String
  Campo2: String
  Campo3: String
  Campo4: String
  Campo5:String
  Campo6:String
  Campo7:String
  Campo8: String 
  Campo9: String
  Campo10: String
  ConfirmadoAuditoria:String
  FechaPte: Date  
}

input CitaFilter {
  Cedula: String
  Paciente: String
  IdOdontologo: String
  Fecha: String
}

input CitOrderBy {
  Paciente: String
}

type Query {
  getCitasHC(filter: CitaFilter, order: CitOrderBy): [CitaHC!]
  
}