scalar Date
type Venta {
  id:           Int!
  fecha_venta:  Date
  forma_pago:   Int
  usuario_id:   Int
  punto_id:     Int
  ciudad_id:    Int
  iva:          Int
  empresa_id:   Int
  valor_total_venta: Int
  estado: String
  createdAt: Date
  updatedAt: Date
}

type Producto {
  id: Int!
  codigo:       String
  nombre:       String
  descripcion:  String
  quantity:     Int
  activo:       Boolean
  eliminado:    Boolean
  valor:        Int
  iva:          Int
  EMPRESA_ID:   Int
  createdAt:    Date
  updatedAt:    Date
}

type ProductosVenta {
  id: Int!
  codigo: String
  nombre: String
  cantidad: Int
  valor:    Int
}

input VentaInput {
  fecha_venta:  Date
  forma_pago:   Int
  usuario_id:   Int
  punto_id:     Int
  ciudad_id:    Int
  iva:          Int
  empresa_id:   Int
  valor_total_venta:    Int
  createdAt:            Date
  updatedAt:            Date
}

input VentaInputUpd {
  id:           Int!
  fecha_venta:  Date
  forma_pago:   Int
  usuario_id:   Int
  punto_id:     Int
  ciudad_id:    Int
  iva:          Int
  empresa_id:   Int
  valor_total_venta: Int
  createdAt: Date
  updatedAt: Date
}

input ProductInput {
  id: Int!
  cantidad: Int
}

input VentaProductos {
  sale: VentaInput
  products: [ProductInput]
}

input VentaUpd {
  sale: VentaInputUpd
  products: [ProductInput]
}

input Pagination {
  pagina: Int!
  limite: Int!
}

input VentaFilter {
  estado: String
  fechini: Date
  fechend: Date
}

type Reponse {
  sales: [Venta]!
  totalRegistros: Int!
}

type Query {
  ventas(filter: VentaFilter, pagination: Pagination): Reponse
  productosByVentaId(id:Int): [ProductosVenta!]
}

type Mutation {
  saveVenta(venta: VentaProductos): Venta
  updateVenta(venta: VentaUpd): Venta
}