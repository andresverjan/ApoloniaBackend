scalar Date
type Recordatorio {
  id: Int!
  nombre: String
  repetir: Boolean
  observaciones: String
  active: Boolean
  fechaRecordatorio: Date
  repetirCadaTimes: Int
  repetirCada: Int
  endsNever: Boolean
  endsOn: Date
  endsAfter: Int
  createdBy: Int
  createdAt: Date
  updatedAt: Date
  EMPRESA_ID: Int
}

input RecordatorioInput {
  nombre: String
  repetir: Boolean
  observaciones: String
  active: Boolean
  fechaRecordatorio: Date
  repetirCadaTimes: Int
  repetirCada: Int
  endsNever: Boolean
  endsOn: Date
  endsAfter: Int
  createdBy: Int
  createdAt: Date
  updatedAt: Date
  EMPRESA_ID: Int
}

input RecordatorioInputUpdate {
  id: Int!
  nombre: String
  repetir: Boolean
  observaciones: String
  active: Boolean
  fechaRecordatorio: Date
  repetirCadaTimes: Int
  repetirCada: Int
  endsNever: Boolean
  endsOn: Date
  endsAfter: Int
  createdBy: Int
  createdAt: Date
  updatedAt: Date
  EMPRESA_ID: Int
}

input  RecordatorioInputUpdateDelete{
   id: Int!
}

input RecordatorioFilter {
  nombre: String
  fechini: Date
  fechend: Date
}

input Pagination {
  pagina: Int!
  limite: Int!
}

type Response {
  lista: [Recordatorio]!
  totalRegistros: Int!
}

type Query {
  recordatorios(filter: RecordatorioFilter, pagination: Pagination): Response
  recordatorioToday(pagination: Pagination): Response
}

type Mutation {
  saveRecordatorios(recordatorio: RecordatorioInput): Recordatorio
  updateRecordatorios(recordatorio: RecordatorioInputUpdate): Recordatorio
  deleteRecordatorios(recordatorio: RecordatorioInputUpdateDelete): String
}