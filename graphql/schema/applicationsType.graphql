scalar Date
type Application {
  id: Int!
  nombre: String!
  nombreTabla: String
  active: Boolean
  createdBy: String
  createdAt: Date
  updatedAt: Date
}

type Campo {
  id: Int!
  nombre: String!
  tipoDato: String!
  tipoCampoId: Int!
  requerido: Boolean
  visible: Boolean
  orden: String
  mascaraId: Int!
  minLength: Int
  maxLength: Int
  buscador: Boolean
  verList: Boolean
  createdAt: Date
  updatedAt: Date
  applicationId: Int!
}

input ApplicationInput {
  nombre: String!
  nombreTabla: String
}

input CampoInput {
  nombre: String!
  nombreUi: String!
  tipoDato: String!
  tipoCampoId: Int!
  requerido: Boolean
  visible: Boolean
  orden: String
  mascaraId: Int!
  minLength: Int
  maxLength: Int
  buscador: Boolean
  verList: Boolean
}

input ApplicationCampos {
  application: ApplicationInput
  campos: [CampoInput]
}

input ApplicationFilter {
  nombre: String
  nombreTabla: String
  active: Boolean
}

input ApplicationOrderBy {
  nombre: String
  nombreTabla: String
  createdAt: Date
}

type Query {
  applications(filter:ApplicationFilter, order:ApplicationOrderBy): [Application!]
  getFieldsByAppId(applicationId:Int!): [Campo!]
}

type Mutation {
  saveAppFields(application: ApplicationCampos): Application
}